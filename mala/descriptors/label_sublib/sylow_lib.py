from mala.descriptors.gen_labels import *


# sylow_2_subgroups generated from gap code: https://www.gap-system.org
sylow_1_s1 = [((0,),)]
sylow_2_s2 = [((0,), (1,)), ((0, 1),)]
sylow_2_s4 = [
    ((0,), (1,), (2,), (3,)),
    ((2, 3),),
    ((0, 1),),
    ((0, 1), (2, 3)),
    ((0, 2), (1, 3)),
    ((0, 2, 1, 3),),
    ((0, 3, 1, 2),),
    ((0, 3), (1, 2)),
]

sylow_2_s6 = [
    ((0,), (1,), (2,), (3,), (4,), (5,)),
    ((4, 5),),
    ((2, 3),),
    ((2, 3), (4, 5)),
    ((0, 1),),
    ((0, 1), (4, 5)),
    ((0, 1), (2, 3)),
    ((0, 1), (2, 3), (4, 5)),
    ((0, 2), (1, 3)),
    ((0, 2), (1, 3), (4, 5)),
    ((0, 2, 1, 3),),
    ((0, 2, 1, 3), (4, 5)),
    ((0, 3, 1, 2),),
    ((0, 3, 1, 2), (4, 5)),
    ((0, 3), (1, 2)),
    ((0, 3), (1, 2), (4, 5)),
]

# extras = [p for p in extras if p not in sylow_2_s6]
# sylow_2_s6.extend(extras)

sylow_2_s8 = [
    ((0,), (1,), (2,), (3,), (4,), (5,), (6,), (7,)),
    ((6, 7),),
    ((4, 5),),
    ((4, 5), (6, 7)),
    ((4, 6), (5, 7)),
    ((4, 6, 5, 7)),
    ((4, 7, 5, 6)),
    ((4, 7), (5, 6)),
    ((2, 3),),
    ((2, 3), (6, 7)),
    ((2, 3), (4, 5)),
    ((2, 3), (4, 5), (6, 7)),
    ((2, 3), (4, 6), (5, 7)),
    ((2, 3), (4, 6, 5, 7)),
    ((2, 3), (4, 7, 5, 6)),
    ((2, 3), (4, 7), (5, 6)),
    ((0, 1),),
    ((0, 1), (6, 7)),
    ((0, 1), (4, 5)),
    ((0, 1), (4, 5), (6, 7)),
    ((0, 1), (4, 6), (5, 7)),
    ((0, 1), (4, 6, 5, 7)),
    ((0, 1), (4, 7, 5, 6)),
    ((0, 1), (4, 7), (5, 6)),
    ((0, 1), (2, 3)),
    ((0, 1), (2, 3), (6, 7)),
    ((0, 1), (2, 3), (4, 5)),
    ((0, 1), (2, 3), (4, 5), (6, 7)),
    ((0, 1), (2, 3), (4, 6), (5, 7)),
    ((0, 1), (2, 3), (4, 6, 5, 7)),
    ((0, 1), (2, 3), (4, 7, 5, 6)),
    ((0, 1), (2, 3), (4, 7), (5, 6)),
    ((0, 2), (1, 3)),
    ((0, 2), (1, 3), (6, 7)),
    ((0, 2), (1, 3), (4, 5)),
    ((0, 2), (1, 3), (4, 5), (6, 7)),
    ((0, 2), (1, 3), (4, 6), (5, 7)),
    ((0, 2), (1, 3), (4, 6, 5, 7)),
    ((0, 2), (1, 3), (4, 7, 5, 6)),
    ((0, 2), (1, 3), (4, 7), (5, 6)),
    ((0, 2, 1, 3),),
    ((0, 2, 1, 3), (6, 7)),
    ((0, 2, 1, 3), (4, 5)),
    ((0, 2, 1, 3), (4, 5), (6, 7)),
    ((0, 2, 1, 3), (4, 6), (5, 7)),
    ((0, 2, 1, 3), (4, 6, 5, 7)),
    ((0, 2, 1, 3), (4, 7, 5, 6)),
    ((0, 2, 1, 3), (4, 7), (5, 6)),
    ((0, 3, 1, 2),),
    ((0, 3, 1, 2), (6, 7)),
    ((0, 3, 1, 2), (4, 5)),
    ((0, 3, 1, 2), (4, 5), (6, 7)),
    ((0, 3, 1, 2), (4, 6), (5, 7)),
    ((0, 3, 1, 2), (4, 6, 5, 7)),
    ((0, 3, 1, 2), (4, 7, 5, 6)),
    ((0, 3, 1, 2), (4, 7), (5, 6)),
    ((0, 3), (1, 2)),
    ((0, 3), (1, 2), (6, 7)),
    ((0, 3), (1, 2), (4, 5)),
    ((0, 3), (1, 2), (4, 5), (6, 7)),
    ((0, 3), (1, 2), (4, 6), (5, 7)),
    ((0, 3), (1, 2), (4, 6, 5, 7)),
    ((0, 3), (1, 2), (4, 7, 5, 6)),
    ((0, 3), (1, 2), (4, 7), (5, 6)),
    ((0, 4), (1, 5), (2, 6), (3, 7)),
    ((0, 4), (1, 5), (2, 6, 3, 7)),
    ((0, 4, 1, 5), (2, 6), (3, 7)),
    ((0, 4, 1, 5), (2, 6, 3, 7)),
    ((0, 4, 2, 6), (1, 5, 3, 7)),
    ((0, 4, 2, 6, 1, 5, 3, 7),),
    ((0, 4, 3, 7, 1, 5, 2, 6),),
    ((0, 4, 3, 7), (1, 5, 2, 6)),
    ((0, 4), (1, 5), (2, 7, 3, 6)),
    ((0, 4), (1, 5), (2, 7), (3, 6)),
    ((0, 4, 1, 5), (2, 7, 3, 6)),
    ((0, 4, 1, 5), (2, 7), (3, 6)),
    ((0, 4, 2, 7, 1, 5, 3, 6),),
    ((0, 4, 2, 7), (1, 5, 3, 6)),
    ((0, 4, 3, 6), (1, 5, 2, 7)),
    ((0, 4, 3, 6, 1, 5, 2, 7),),
    ((0, 5, 1, 4), (2, 6), (3, 7)),
    ((0, 5, 1, 4), (2, 6, 3, 7)),
    ((0, 5), (1, 4), (2, 6), (3, 7)),
    ((0, 5), (1, 4), (2, 6, 3, 7)),
    ((0, 5, 3, 7, 1, 4, 2, 6),),
    ((0, 5, 3, 7), (1, 4, 2, 6)),
    ((0, 5, 2, 6), (1, 4, 3, 7)),
    ((0, 5, 2, 6, 1, 4, 3, 7),),
    ((0, 5, 1, 4), (2, 7, 3, 6)),
    ((0, 5, 1, 4), (2, 7), (3, 6)),
    ((0, 5), (1, 4), (2, 7, 3, 6)),
    ((0, 5), (1, 4), (2, 7), (3, 6)),
    ((0, 5, 3, 6), (1, 4, 2, 7)),
    ((0, 5, 3, 6, 1, 4, 2, 7),),
    ((0, 5, 2, 7, 1, 4, 3, 6),),
    ((0, 5, 2, 7), (1, 4, 3, 6)),
    ((0, 6, 2, 4), (1, 7, 3, 5)),
    ((0, 6, 3, 5, 1, 7, 2, 4),),
    ((0, 6, 2, 4, 1, 7, 3, 5),),
    ((0, 6, 3, 5), (1, 7, 2, 4)),
    ((0, 6), (1, 7), (2, 4), (3, 5)),
    ((0, 6, 1, 7), (2, 4), (3, 5)),
    ((0, 6), (1, 7), (2, 4, 3, 5)),
    ((0, 6, 1, 7), (2, 4, 3, 5)),
    ((0, 6, 2, 5, 1, 7, 3, 4),),
    ((0, 6, 3, 4), (1, 7, 2, 5)),
    ((0, 6, 2, 5), (1, 7, 3, 4)),
    ((0, 6, 3, 4, 1, 7, 2, 5),),
    ((0, 6), (1, 7), (2, 5, 3, 4)),
    ((0, 6, 1, 7), (2, 5, 3, 4)),
    ((0, 6), (1, 7), (2, 5), (3, 4)),
    ((0, 6, 1, 7), (2, 5), (3, 4)),
    ((0, 7, 3, 5, 1, 6, 2, 4),),
    ((0, 7, 2, 4), (1, 6, 3, 5)),
    ((0, 7, 3, 5), (1, 6, 2, 4)),
    ((0, 7, 2, 4, 1, 6, 3, 5),),
    ((0, 7, 1, 6), (2, 4), (3, 5)),
    ((0, 7), (1, 6), (2, 4), (3, 5)),
    ((0, 7, 1, 6), (2, 4, 3, 5)),
    ((0, 7), (1, 6), (2, 4, 3, 5)),
    ((0, 7, 3, 4), (1, 6, 2, 5)),
    ((0, 7, 2, 5, 1, 6, 3, 4),),
    ((0, 7, 3, 4, 1, 6, 2, 5),),
    ((0, 7, 2, 5), (1, 6, 3, 4)),
    ((0, 7, 1, 6), (2, 5, 3, 4)),
    ((0, 7), (1, 6), (2, 5, 3, 4)),
    ((0, 7, 1, 6), (2, 5), (3, 4)),
    ((0, 7), (1, 6), (2, 5), (3, 4)),
]

# subtree symmetries
s4_subtree_syms = [((0, 1),), ((2, 3),)]

s6_subtree_syms = sylow_2_s4.copy() + [((4, 5),)]


def filled_perm(tups, rank):
    allinds = list(range(rank))
    try:
        remainders = [i for i in allinds if i not in flatten(tups)]
        alltups = tups + tuple([tuple([k]) for k in remainders])
    except TypeError:
        remainders = [i for i in allinds if i not in flatten(flatten(tups))]
        alltups = tups + tuple([tuple([k]) for k in remainders])
    return alltups
